name: Upload to CurseForge

on:
  workflow_dispatch:
    inputs:
      version_updated:
        description: "Have you updated the version? (yes/no)"
        required: true
        default: "no"
      changelog:
        description: "Changelog"
        required: true
      game_versions:
        description: "Game Versions"
        required: true

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check Version Confirmation
        run: |
          if [ "${{ github.event.inputs.version_updated }}" != "yes" ]; then
            echo "Version update not confirmed. Please confirm the version has been updated before proceeding."
            exit 1
          fi

      - name: Extract Title and Version from .toc
        id: toc_info
        run: |
          # Extracts the addon's title and version from the .toc file.
          TITLE=$(grep '## Title:' Sapped.toc | cut -d':' -f2- | xargs)
          VERSION=$(grep '## Version:' Sapped.toc | cut -d':' -f2- | xargs)
          # Sets the title and version as environment variables for subsequent steps.
          echo "TITLE=$TITLE" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # Use environment files for setting outputs.
          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare Addon Directory
        run: |
          # Create a directory named after the addon and sync all relevant files into it,
          # excluding files like .git, .vscode, and .github to prepare for zipping.
          mkdir "${{ env.TITLE }}"
          rsync -avm --exclude='.git/' --exclude='.vscode/' --exclude='.github/' ./ "${{ env.TITLE }}/"

      - name: Set ZIP Filename Environment Variable
        run: |
          # Combine the addon's title and version to form the name of the zip file, for example "Sapped-1.0.0.zip",
          # and store it in an environment variable for easy reference.
          echo "ADDON_ZIP_FILENAME=${{ env.TITLE }}-${{ env.VERSION }}.zip" >> $GITHUB_ENV

      - name: Zip Addon Directory
        run: |
          # Zip the prepared directory, using the previously defined filename,
          # to create a package ready for upload to CurseForge.
          zip -r ${{ env.ADDON_ZIP_FILENAME }} "${{ env.TITLE }}"/

      - name: Upload to CurseForge
        uses: itsmeow/curseforge-upload@v3
        with:
          token: "${{ secrets.CF_API_TOKEN }}"
          project_id: 986227
          game_endpoint: "wow"
          release_type: "release"
          display_name: "${{ env.TITLE }}"
          game_versions: ${{ github.event.inputs.game_versions }}
          changelog: ${{ github.event.inputs.changelog }}
          file_path: ${{ env.ADDON_ZIP_FILENAME }}

      - name: Cleanup Addon Directory
        run: rm -rf "${{ env.TITLE }}"
